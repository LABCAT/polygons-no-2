{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/Grid.js","audio/polygons-no-2.ogg","audio/polygons-no-2.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","Grid","p5Canvas","shape","rows","columns","this","canvas","rectMode","CENTER","weight","strokeWeight","rect","cellWidth","cellHeight","i","j","drawShape","clear","draw","triangle","push","beginShape","vertex","endShape","CLOSE","pop","d3","Object","assign","range","voronoi","RAND","min","max","Math","random","P5SketchWithAudio","sketchRef","useRef","Sketch","p","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","controlChanges","scheduleCueSet","keys","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","length","note","ticks","time","addCue","grid","setup","createCanvas","colorMode","HSB","background","generateColourScheme","setupVoronoi","gridCanvas","createGraphics","noFill","setStrokeWeight","showGrid","isPlaying","renderVoronoi","image","polygons","drawingContext","clearRect","positions","totalShapes","pos","vel","velocities","vertices","map","v","createVector","fillColour","colourScheme","setAlpha","voronoiOpacity","stroke","x","y","executeCueSet1","currentGridShape","executeCueSet2","includes","shapes","splice","indexOf","setShape","reDraw","executeCueSet3","value","_","Float64Array","from","extent","startHue","color","mousePressed","pause","parseInt","currentTime","buffer","duration","reset","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5495ebcb.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default class Grid {\n    constructor(p5Canvas, shape = 'rect', rows = 8, columns = 8) {\n        this.canvas = p5Canvas;\n        this.shape = shape;\n        this.rows = rows;\n        this.columns = columns;\n        this.canvas.rectMode(this.canvas.CENTER);\n    }\n\n    setShape(shape) {\n        this.shape = shape;\n    }\n\n    setStrokeWeight(weight) {\n        this.weight = weight;\n    }\n\n    draw() {\n        this.canvas.strokeWeight(this.weight);\n        this.canvas.rect(\n            this.canvas.width / 2, \n            this.canvas.height / 2, \n            this.canvas.width, \n            this.canvas.height\n        );\n        const cellWidth = this.canvas.width / this.columns,\n            cellHeight = this.canvas.height / this.rows;    \n        for (let i = cellWidth / 2; i < this.canvas.width; i = i + cellWidth) {\n            for (let j = cellHeight / 2; j < this.canvas.height; j = j + cellHeight) {\n                this.drawShape(i, j, cellWidth, cellHeight);\n            }\n        }\n    }\n\n    reDraw() {\n        this.canvas.clear();\n        this.draw();\n    }\n\n    drawShape(i, j, cellWidth, cellHeight) {\n        switch (this.shape) {\n            case 'triangle':\n                this.canvas.triangle(\n                    i - cellWidth / 2,\n                    j + cellHeight / 2,\n                    i + cellWidth / 2,\n                    j + cellHeight / 2,\n                    i,\n                    j - cellHeight / 2 + this.weight / 2,\n                );\n                break;\n            case 'diamond':\n                this.canvas.push()\n                this.canvas.beginShape();\n                this.canvas.vertex(i, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 2, j);\n                this.canvas.vertex(i, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 2, j);\n                this.canvas.endShape(this.canvas.CLOSE);\n                this.canvas.pop()\n                break;\n            case 'hex':\n                this.canvas.push()\n                this.canvas.beginShape();\n                this.canvas.vertex(i - cellWidth / 4, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 4, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 2, j);\n                this.canvas.vertex(i + cellWidth / 4, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 4, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 2, j);\n                this.canvas.endShape(this.canvas.CLOSE);\n                this.canvas.pop()\n                break;\n            case 'hex90':\n                this.canvas.push()\n                this.canvas.beginShape();\n                this.canvas.vertex(i, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 2, j - cellHeight / 4);\n                this.canvas.vertex(i + cellWidth / 2, j + cellHeight / 4);\n                this.canvas.vertex(i, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 2, j + cellHeight / 4);\n                this.canvas.vertex(i - cellWidth / 2, j - cellHeight / 4);\n                this.canvas.endShape(this.canvas.CLOSE);\n                this.canvas.pop()\n                break;\n             case 'oct':\n                this.canvas.push()\n                this.canvas.beginShape();\n                this.canvas.vertex(i - cellWidth / 4, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 4, j - cellHeight / 2);\n                this.canvas.vertex(i + cellWidth / 2, j - cellHeight / 4);\n                this.canvas.vertex(i + cellWidth / 2, j + cellHeight / 4);\n                this.canvas.vertex(i + cellWidth / 4, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 4, j + cellHeight / 2);\n                this.canvas.vertex(i - cellWidth / 2,  j + cellHeight / 4);\n                this.canvas.vertex(i - cellWidth / 2,  j - cellHeight / 4);\n                this.canvas.endShape(this.canvas.CLOSE);\n                this.canvas.pop()\n                break;\n            default:\n                this.canvas.rect(i, j, cellWidth, cellHeight);\n                break;\n        }\n    }\n}\n","export default __webpack_public_path__ + \"static/media/polygons-no-2.d61eb39c.ogg\";","export default __webpack_public_path__ + \"static/media/polygons-no-2.c061a233.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { range } from 'd3-array'\nimport * as voronoi from 'd3-voronoi'\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport Grid from './classes/Grid.js';\n\nimport audio from \"../audio/polygons-no-2.ogg\";\nimport midi from \"../audio/polygons-no-2.mid\";\n\nconst d3 = Object.assign(\n  {},\n  {\n    range,\n  },\n  voronoi\n);\nconst RAND = (min, max) => Math.random() * (max - min) + min;\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[3].notes; // Synth 2 - Bass Guitar\n                    const noteSet2 = result.tracks[6].notes; // Dr Rex 1 - \n                    const controlChanges = Object.assign({},result.tracks[1].controlChanges); // Filter 1 - Mixer\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.scheduleCueSet(controlChanges[Object.keys(controlChanges)[0]], 'executeCueSet3');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.grid = null;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.colorMode(p.HSB);\n            p.background(0);\n            p.generateColourScheme();\n            p.setupVoronoi();\n\n            p.gridCanvas = p.createGraphics(p.canvasWidth, p.canvasHeight);\n            p.gridCanvas.noFill();\n            p.grid = new Grid(p.gridCanvas, 'rect', 3, 3);\n            p.grid.setStrokeWeight(32);\n            p.grid.draw();\n        }\n\n        p.showGrid = false;\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.renderVoronoi();\n                if(p.showGrid) {\n                    p.image(p.gridCanvas, 0, 0);\n                } \n            }\n        }\n\n        p.polygons = [];\n\n        p.renderVoronoi = () => {\n            p.drawingContext.clearRect(0, 0, p.drawingContext.canvas.width, p.drawingContext.canvas.height);\n            p.polygons = p.voronoi(p.positions).polygons()\n\n            for (let i = 0; i < p.totalShapes; i++) {\n                \n                // EULER\n                let pos = p.positions[i]\n                let vel = p.velocities[i]\n                vel[0] += RAND(-0.1, 0.1)\n                vel[1] += RAND(-0.1, 0.1)\n                pos[0] += vel[0]\n                pos[1] += vel[1]\n                vel[0] *= 0.99\n                vel[1] *= 0.99\n\n                // WALLS\n                if (pos[0] >= p.width-4 || pos[0] <= 4) vel[0] *= -1 \n                if (pos[1] >= p.height-4 || pos[1] <= 4) vel[1] *= -1\n                \n                // ALGO + Colour\n                const vertices = p.polygons[i].map(v => p.createVector(v[0], v[1])), \n                    fillColour = p.colourScheme[i];\n                fillColour.setAlpha(p.voronoiOpacity);\n                p.strokeWeight(4);\n                p.stroke(0, 0, 100, p.voronoiOpacity);\n                p.fill(fillColour);\n\n                // RENDER (cell)\n                p.push();\n                p.beginShape();\n                vertices.map(v => p.vertex(v.x, v.y));\n                p.endShape(p.CLOSE);\n                p.pop()\n                \n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            p.totalShapes = p.totalShapes + 3;\n            p.generateColourScheme();\n            p.setupVoronoi();\n        }\n\n        p.currentGridShape = 'rect';\n\n        p.executeCueSet2 = (note) => {\n            const { midi, currentCue } = note;\n            if(![39, 44, 45, 49, 54].includes(midi)){\n                const shapes = ['rect', 'diamond', 'hex', 'hex90', 'oct'];\n                shapes.splice(shapes.indexOf(p.currentGridShape), 1)\n                p.showGrid = true;\n                p.currentGridShape = currentCue < 159 ? p.random(shapes) : 'rect';\n                p.grid.setShape(p.currentGridShape);\n                p.grid.reDraw();\n            }\n        }\n\n        p.voronoiOpacity = 0;\n\n        p.executeCueSet3 = (note) => {\n            p.voronoiOpacity = p.map(note.value, 0, 1, 0, 0.75);\n        }\n\n        p.positions = [];\n        p.velocities = [];\n        p.voronoi = [];\n        p.totalShapes = 3;\n\n        p.setupVoronoi = () => {\n            p.positions = d3.range(p.totalShapes).map(_ => Float64Array.from({length: 2}, (_, i) => Math.random() * (i & 1 ? p.height : p.width)))\n            p.velocities = d3.range(p.totalShapes).map(_ => Float64Array.from({length: 2}, _ => RAND(-0.0001, 0.0001) ));\n            p.voronoi = d3.voronoi().extent([[0, 0],[p.width, p.height]]);\n        }\n\n        p.colourScheme = [];\n\n        p.generateColourScheme = () => {\n            p.colourScheme = [];\n            const startHue = p.random([0,30,60,90,120,150,180,210,240,270,300,330])\n            for (let i = 0; i < p.totalShapes; i++) {\n                p.colourScheme.push(\n                    p.color(\n                        // p.random(startHue, startHue + 30),\n                        startHue,\n                        p.random(75, 100),\n                        p.random(75, 100),\n                    )\n                );\n            }\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}